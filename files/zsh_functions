# fuzzy kubectl exec
kx () {
	local pod=($(kubectl get pods --all-namespaces -owide | fzf | awk '{print $1, $2}'))
	local cmd=${@:-"bash"}

	echo kubectl exec -it --namespace $pod[1] $pod[2] $cmd
	kubectl exec -it --namespace $pod[1] $pod[2] $cmd
}

# fuzzy kubectl logs
kl () {
	local pod=($(kubectl get pods --all-namespaces -owide | fzf | awk '{print $1, $2}'))
	local attr=${@:-""}

	echo kubectl logs -f $attr --namespace $pod[1] $pod[2]
	kubectl logs -f $attr --namespace $pod[1] $pod[2]
}

# fuzzy kubectl delete pod
kdel () {
	local pod=($(kubectl get pods --all-namespaces -owide | fzf | awk '{print $1, $2}'))
	local attr=${@:-""}

	echo kubectl delete pod --namespace $pod[1] $pod[2]
	kubectl delete pod --namespace $pod[1] $pod[2]
}

# fuzzy kubectl describe pod
kd () {
	local pod=($(kubectl get pods --all-namespaces -owide | fzf | awk '{print $1, $2}'))
	local attr=${@:-""}

	echo kubectl describe pod --namespace $pod[1] $pod[2]
	kubectl describe pod --namespace $pod[1] $pod[2]
}

fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

typeset -A kubectx_mapping

cluster_short_name() {
  local cluster_name=$(echo "$1" | cut -d : -f6)

  #if associative array declared
  if [[ -v kubectx_mapping["$cluster_name"] ]]; then
    echo $kubectx_mapping[$cluster_name]
  else
    echo $cluster_name
  fi
}

typeset -A aws_region

aws_region[us-west-2]="w2"
aws_region[us-east-1]="e1"
aws_region[eu-west-1]="euw1"
aws_region[cn-nortwest-1]="cnw1"

aws_custom_prompt() {
	local prod_suffix="prod"
	local profile=$(echo $AWS_PROFILE)
	local prompt=$profile

	if [[ $AWS_PROFILE =~ $prod_suffix ]]; then
		prompt="ðŸš¨%{$fg[white]%}%{$bg[red]%}$aws_region[$AWS_REGION]-$prompt%{$reset_color%}ðŸš¨"
	else
		prompt="ðŸŒ€$aws_region[$AWS_REGION]-$promptðŸŒ€"
	fi

	echo $prompt
}
